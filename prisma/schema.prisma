generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:root@localhost:5432/merchant_tests?schema=public"
}

model users {
  id         Int        @id @default(autoincrement())
  username   String
  email      String     @unique
  password   String
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt

  merchants  merchants[] // one-to-many
}

model merchants {
  id         Int       @id @default(autoincrement())
  id_user    Int
  name       String
  location   String?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  user       users     @relation(fields: [id_user], references: [id], onDelete: Cascade)
  products   products[]
}

model products {
  id           Int             @id @default(autoincrement())
  id_merchant  Int
  name         String
  location     String
  price        Int             @default(0)
  created_at   DateTime        @default(now())
  updated_at   DateTime        @updatedAt

  merchant     merchants       @relation(fields: [id_merchant], references: [id], onDelete: Cascade)
  colours      product_colours[]
  sizes        product_sizes[]
  variants     product_variants[]
}

model product_colours {
  id           Int               @id @default(autoincrement())
  id_product   Int
  name         String
  created_at   DateTime          @default(now())
  updated_at   DateTime          @updatedAt

  product      products          @relation(fields: [id_product], references: [id], onDelete: Cascade)
  variants     product_variants[]
}

model product_sizes {
  id           Int               @id @default(autoincrement())
  id_product   Int
  name         String
  created_at   DateTime          @default(now())
  updated_at   DateTime          @updatedAt

  product      products          @relation(fields: [id_product], references: [id], onDelete: Cascade)
  variants     product_variants[]
}

model product_variants {
  id                Int              @id @default(autoincrement())
  id_product_colour Int
  id_product_size   Int
  id_product        Int
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt

  product_colour    product_colours  @relation(fields: [id_product_colour], references: [id], onDelete: Cascade)
  product_size      product_sizes    @relation(fields: [id_product_size], references: [id], onDelete: Cascade)
  product           products         @relation(fields: [id_product], references: [id], onDelete: Cascade)
}
